name: pull-request 

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:    
  # prepare-branch:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Extract branch name
  #     shell: bash
  #     run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
  #     id: prepare_branch

  # pull-request:
  #   needs: prepare-branch
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  
  #   - name: Validating Pull Request
  #     uses: ciro-stodulski/tsnode-clean-api/.github/templates/pull-request@feat/pipeline

  build:
    # needs: [prepare-branch, pull-request]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
  
    - name: Executing Build
      uses: ciro-stodulski/tsnode-clean-api/.github/templates/build@feat/pipeline

  publish:
      needs: [build]
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
  
      - name: Executing Publish
        uses: ciro-stodulski/tsnode-clean-api/.github/templates/publish@feat/pipeline
        with:
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}

#   # deploy:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #   - name: Executing Deploy
#   #     uses: ./.github/templates/deploy
#   #     with:
#   #       version: v1.0.0
#   #       namespace: "${{ steps.extract_branch.outputs.branch }}"
#   #     if: ${{ steps.extract_branch.outputs.branch == 'develop' || steps.extract_branch.outputs.branch == 'main' }}